@model SCS.Models.Order

@{
    ViewBag.Title = "Добавить";
}
<div class="container" id="generalDiv">
    <div class="divTable">
        <h2>Новый заказ </h2>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <hr />
            <div class="moreInformationOrder">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    <div class="col-md-10">
                        <label>ФИО клиента</label>
                        <div class="d-flex align-content-start align-items-lg-start" >
                            <select name="UserId" class="form-control" id="UserId" lang="ru" required>
                                @Html.ValidationMessageFor(model => model.User, "", new { @class = "text-danger" })
                            </select>
                            <a href="@Url.Action("Create","Users")" target="_blank" class="btn mt-0 mx-3 btn-default btn-circle" title="Добавить пользователя">
                                +
                            </a>
                        </div>
                    </div>
                    

                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        @Html.LabelFor(model => model.DateStart)

                        <input type="datetime-local" id="dateStart" name="dateStart" value="@DateTime.Now.ToString("s").Remove(16)" date-format="m/d/yyyy hh:mm"
                               min="@DateTime.Now.ToString("s").Remove(16)" class="form-control" title="Дата начала действия заказа" required onchange="changeDate()">
                        @Html.ValidationMessageFor(model => model.DateStart, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                </div>

            </div>

            <h4>Акции дня</h4>
            <div id="promotions">
                <table class="table table-hover table-sm" id="tablePromotions">
                    <thead>
                        <tr>
                            <th scope="col">#</th>
                            <th scope="col">Наименование модели</th>
                            <th scope="col">Скидка</th>
                        </tr>
                    </thead>
                    <tbody id="PromotionsTable">
                    </tbody>
                </table>
            </div>

            <h4>Транспорт</h4>
            <hr />
            <div id="transport">
            </div>
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="+" id="addTransport" class="btn btn-outline-dark mt-2" />
            </div>
            <br />

            <h4>Аксессуары</h4>
            <hr />
            <div id="accessories">

            </div>

            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="+" id="addAccessories" class="btn btn-outline-dark mt-2" />
            </div>
            <br />

            <h4>Дополнительные параметры</h4>
            <hr />
            <div class="moreInformationOrder">
                <div class="form-group">
                    <div class="col-md-10">
                        <label>Количество бонусов за заказ</label>
                        <input type="number" class="form-control" name="AddBonuses" id="AddBonuses" value="0" min="0" max="999999" onchange="changeInputValue(this)" />

                        @Html.ValidationMessageFor(model => model.AddBonuses, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-10">
                        <label>Количество замков</label>
                        <input type="number" class="form-control" name="CountLock" id="CountLock" value="0" min="0" max="999999" onchange="calculatePrice()" />
                        @Html.ValidationMessageFor(model => model.CountLock, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        <label>Скидка, руб</label>
                        <input type="number" class="form-control" name="Discount" id="Discount" value="0" min="0" onchange="calculatePrice()" />
                        @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-10">

                    </div>
                    <div class="col-md-10">

                    </div>
                </div>
            </div>
            <br />
            <h4>Оплата </h4>
            <hr />
            <div class="form-group" id="totalDiv">
                <label>Итого к оплате: </label>
                <label id="totalSum">0</label>
                <label> руб</label>
            </div>
            <div class="moreInformationOrder">
                <div class="form-group">
                    <div class="col-md-10">
                        <label>Оплата наличными</label>
                        <input type="number" class="form-control" name="CashPayment" id="CashPayment" value="0" min="0" max="999999" onchange="calculateLeftToPay()" />
                    </div>
                    <div class="col-md-10">
                        <label>Оплата картой</label>
                        <input type="number" class="form-control" name="CardPayment" id="CardPayment" value="0" min="0" max="999999" onchange="calculateLeftToPay()" />
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-10">
                        <label>Залог наличными</label>
                        <input type="number" class="form-control" name="CashDeposit" id="CashDeposit" value="0" min="0" max="999999" onchange="calculateLeftToPay()" />
                    </div>
                    <div class="col-md-10">
                        <label>Залог картой</label>
                        <input type="number" class="form-control" name="CardDeposit" id="CardDeposit" value="0" min="0" max="999999" onchange="calculateLeftToPay()" />
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-10">
                        <label id="labelBonusPayment">Оплата бонусами </label>
                        <input type="number" class="form-control" name="bonusPayment" id="bonusPayment" value="0" min="0" max="0" onchange="calculateLeftToPay()" />
                    </div>
                    <div class="col-md-10">
                        <label>Документ</label>
                        @Html.DropDownList("TypeDocumentId", null, htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-10">
                        <label>Примечание</label>
                        <input type="text" class="form-control" name="Note" id="Note" />
                    </div>
                </div>
            </div>
            <div class="form-group" id="totalDiv">
                <label>Осталось оплатить: </label>
                <label id="LeftToPay">0</label>
                <label> руб</label>
            </div>
            <br />
            <div class="form-group">
                <input type="button" value="Очистить" style="margin-right:1em" onclick="changeDate()" class="btn btn btn-dark float-md-left" />
                <input type="submit" value="Создать заказ" class="btn btn btn-danger float-md-left" />
            </div>
        }
    </div>
</div>

<script>
var checkRateTransp = true;
var checkRateAccessor = true;
$(document).ready(function () {
    //Проверка наличия транспорта, аксессуаров и тарифов в указанное время
    checkRate();
    checkTransport();
    checkAccessories();
    checkPromotions();
});

function checkRate() {
    //Проверка наличия тарифов в текущее время
    $.ajax({
        url: "/api/web/CheckRate",
        dataType: "json",
        data:
        {
            dateTime: document.getElementById("dateStart").value,
            isTransport: true
        },
        success: function (data) {
            checkRateTransp = true;
            document.getElementById("addTransport").hidden = false;
            document.getElementById("transport").innerHTML = '';

        }
    });
};
function checkTransport() {
    $.ajax({
        url: "/api/web/CheckTransport",
        dataType: "json",
        data:
        {
            dateTime: document.getElementById("dateStart").value
        },
        success: function (data) {
            if (checkRateTransp == true) {
                if (data == false) {
                    document.getElementById("addTransport").hidden = true;
                    document.getElementById("transport").innerHTML = '<p class="text - center">В указанное время отсутствуют доступные транспортные средства</p>';
                }
                else {
                    document.getElementById("addTransport").hidden = false;
                    document.getElementById("transport").innerHTML = '';
                }
            }
        }
    });
};
function checkAccessories() {
    $.ajax({
        url: "/api/web/CheckAccessories",
        dataType: "json",
        data:
        {
            dateTime: document.getElementById("dateStart").value
        },
        success: function (data) {
            if (checkRateAccessor == true) {
                if (data == false) {
                    document.getElementById("addAccessories").hidden = true;
                    document.getElementById("accessories").innerHTML = '<p class="text - center">В указанное время отсутствуют доступные аксессуары</p>';
                }
                else {
                    document.getElementById("addAccessories").hidden = false;
                    document.getElementById("accessories").innerHTML = '';
                }
            }
        }
    });
};
function checkPromotions() {
    $.ajax({
        type: "GET",
        dataType: "json",
        url: "/api/web/GetPromotions",
        data:
        {
            dateTime: document.getElementById("dateStart").value
        },
        success: function (msg) {

            var tableBody = "";
            for (var i = 0; i < msg.length; ++i) {
                tableBody += "<tr> <td colspan='3' class='text-center'><b>" + msg[i].Name + "</b></td></tr>";
                for (var j = 0; j < msg[i]["PromotionsTransportModels"].length; ++j) {
                    tableBody += "<tr>" +
                        "<th scope='row'>" + j + "</th>" + "<td>" + msg[i]["PromotionsTransportModels"][j].TransportModels.Name + "</td><td>" + msg[i].Discount + "</td>" +
                        "</tr>";
                }
            }
            if (msg.length > 0) {
                $("#tablePromotions > tbody > tr").remove();
                $("#tablePromotions > tbody").append(tableBody);
            }
            else {

                $("#tablePromotions > tbody > tr").remove();
                $("#tablePromotions > tbody").append("<td colspan='3' class='text-center'><b>В указанный день акции отсутствуют</b></td>");
            }
        }
    });
}

//Добавление транспорта
$("#addTransport").click(function () {
    $.ajax({
        url: 'AddDropListTransport',
        datatype: 'html',
        data: {
            dateTime: document.getElementById("dateStart").value
        },
        success: function (data) {
            $("#transport").append(data);
            var countTransport = document.getElementsByClassName("Transport");

            if (countTransport.length >= document.getElementById("Transport-0").length - 1) {
                document.getElementById("addTransport").hidden = true;
            }
        }
    })
});
//Добавление аксессуара
$("#addAccessories").click(function () {
    $.ajax({
        url: 'AddDropListAccessories',
        datatype: 'html',
        data: {
            dateTime: document.getElementById("dateStart").value
        },
        success: function (data) {
            $("#accessories").append(data);
            var countAccessories = document.getElementsByClassName("Accessories");

            if (countAccessories.length >= document.getElementById("Accessories-0").length - 1) {
                document.getElementById("addAccessories").hidden = true;
            }
        }
    })
});
$("#bonusPayment").change(function () {
    let bonusValue = document.getElementById("bonusPayment").value;
    let bonusMax = document.getElementById("bonusPayment").max;
    if (bonusValue > bonusMax) {
        document.getElementById("bonusPayment").value = document.getElementById("bonusPayment").max;
    }
    if (bonusValue < 0) {
        document.getElementById("bonusPayment").value = 0;
    }
});
function deleteBlock(nameBlock) {
    document.getElementById(nameBlock).remove();

    $.ajax({
        url: "DeleteBlockTransport",
        dataType: "json"
    });
    calculatePrice();
}
function changeTransport(id) {
    $.ajax({
        type: "GET",
        dataType: "json",
        url: "/api/web/ValueMarkupTransport",
        data: "id=" + document.getElementById(id).value + "&dateStart=" + document.getElementById("dateStart").value,

        success: function (msg) {
            document.getElementById("totalSum").innerHTML = Number(document.getElementById("totalSum").textContent) - Number(msg);
            document.getElementById("LeftToPay").innerHTML = Number(document.getElementById("LeftToPay").textContent) - Number(msg);
        }
    });
    $.ajax({
        url: "/api/web/CountFreeTransport",
        dataType: "json",
        data:
        {
            dateTime: document.getElementById("dateStart").value,
            idTransportModels: document.getElementById(id).value
        },
        success: function (data) {
            $("#countTransport-" + id.split("-")[1]).attr("max", data);
            $("#availableTransport-" + id.split("-")[1]).html(data);
        }
    });
    calculatePrice();
};
function changeDate() {
    checkPromotions();
    document.getElementById("transport").innerHTML = '';
    document.getElementById("accessories").innerHTML = '';
    document.getElementById("totalSum").innerHTML = "0";
    document.getElementById("LeftToPay").innerHTML = "0";
    document.getElementById("CountLock").value = 0;
    document.getElementById("Discount").value = 0;

    document.getElementById("CashPayment").value = 0;
    document.getElementById("CardPayment").value = 0;
    document.getElementById("CashDeposit").value = 0;
    document.getElementById("CardDeposit").value = 0;
    document.getElementById("bonusPayment").value = 0;
    document.getElementById("AddBonuses").value = 0;

    checkRate();
    checkTransport();
    checkAccessories();
    calculatePrice();
};
function verifyChangeMarkup(id) {
    let markupValue = document.getElementById(id).value;
    let markupMax = document.getElementById(id).max;
    if (markupValue > markupMax) {
        document.getElementById(id).value = document.getElementById(id).max;
    }
    if (bonusValue < 0) {
        document.getElementById(id).value = 0;
    }
};
function calculatePrice() {
    var summ = document.getElementById("totalSum");
    var lpay = document.getElementById("LeftToPay");

    var arr = document.getElementsByClassName("Transport");
    var arrCountTransport = document.getElementsByClassName("countTransport");


    var arrAccess = document.getElementsByClassName("Accessories");
    var arrCountAccessories = document.getElementsByClassName("countAccessories");

    var lock = document.getElementById("CountLock");

    var discount = document.getElementById("Discount");

    var rate = document.getElementById("Rates");

    if (lock.value == null || lock.value == "") {
        lock.value = 0;
    }
    if (discount.value == null || discount.value == "") {
        discount.value = 0;
    }

    let numberTransport = 0;
    summ.innerHTML = "0";
    lpay.innerHTML = Number("0");

    while (numberTransport < arr.length) {
        $.ajax({
            type: "GET",
            dataType: "json",
            url: "/api/web/TarifPrice",
            data:
            {
                model: arr[numberTransport].value,
                rate: rate.value,
                countTransport: arrCountTransport[numberTransport].value,
                dateStart: document.getElementById("dateStart").value
            },
            success: function (msg) {
                summ.innerHTML = Number(document.getElementById("totalSum").textContent) + Number(msg) ;
                lpay.innerHTML = Number(document.getElementById("LeftToPay").textContent) + Number(msg) ;
            }
        });
        ++numberTransport;
    }

    let numberAccessories = 0;
    while (numberAccessories < arrAccess.length) {
        $.ajax({
            type: "GET",
            dataType: "json",
            url: "/api/web/TarifPriceAccessories",
            data: "model=" + arrAccess[numberAccessories].value + "&countAccessories=" + arrCountAccessories[numberAccessories].value,
            success: function (msg) {
                summ.innerHTML = Number(document.getElementById("totalSum").textContent) + Number(msg);
                lpay.innerHTML = Number(document.getElementById("LeftToPay").textContent) + Number(msg);
            }
        });
        ++numberAccessories;
    }

    lpay.innerHTML = Number(document.getElementById("LeftToPay").textContent) + Number(lock.value * 100);
    summ.innerHTML = Number(document.getElementById("totalSum").textContent) + Number(lock.value * 100);

    lpay.innerHTML = Number(document.getElementById("LeftToPay").textContent) - Number(discount.value);
    //summ.innerHTML = Number(document.getElementById("totalSum").textContent) - Number(discount.value);

    lpay.innerHTML = Number(document.getElementById("LeftToPay").textContent) -
        Number(document.getElementById("CashPayment").value) -
        Number(document.getElementById("CardPayment").value) -
        Number(document.getElementById("bonusPayment").value);
}
function calculateLeftToPay() {
    var lpay = document.getElementById("LeftToPay");
    lpay.innerHTML = document.getElementById("totalSum").textContent;
    var bonusPayment = 0;
    if (document.getElementById("bonusPayment").value <= document.getElementById("bonusPayment").max) {
        bonusPayment = document.getElementById("bonusPayment").value;
    }
    else {
        bonusPayment = document.getElementById("bonusPayment").max
    }
    lpay.innerHTML = Number(document.getElementById("LeftToPay").textContent) -
        Number(document.getElementById("CashPayment").value) -
        Number(document.getElementById("CardPayment").value) -
        Number(document.getElementById("Discount").value) -
        Number(bonusPayment);
};
</script>
@Scripts.Render("~/bundles/jqueryval")

<script src="~/Scripts/select2/i18n/ru.js"></script>
<script src="~/Scripts/select2/select2.full.min.js"></script>
<script src="~/Scripts/select2/select2.js"></script>


