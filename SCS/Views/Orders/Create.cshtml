@model SCS.Models.Order

@{
    ViewBag.Title = "Create";
}
<div class="container" id="generalDiv">
    <div class="divTable">
        <h2>Создание заказа</h2>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <hr />
            <div class="moreInformationOrder">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    <div class="col-md-10">
                        <label>ФИО клиента</label>
                        <select name="UserId" class="form-control" id="UserId" lang="ru" required>
                            @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                        </select>
                    </div>

                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        @Html.LabelFor(model => model.DateStart)

                        <input type="datetime-local" id="dateStart" name="dateStart" value="@DateTime.Now.ToString("s").Remove(16)" date-format="m/d/yyyy hh:mm"
                               min="@DateTime.Now.ToString("s").Remove(16)" class="form-control" title="Дата начала действия заказа" required onchange="changeDate()">
                        @Html.ValidationMessageFor(model => model.DateStart, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                </div>

            </div>

            <h4>Транспорт</h4>
            <hr />
            <div id="transport">
            </div>
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="+" id="addTransport" class="btn btn-outline-dark" />
            </div>
            <br />

            <h4>Аксессуары</h4>
            <hr />
            <div id="accessories">

            </div>

            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="+" id="addAccessories" class="btn btn-outline-dark" />
            </div>
            <br />

            <h4>Дополнительные параметры</h4>
            <hr />
            <div class="moreInformationOrder">
                <div class="form-group">
                    <div class="col-md-10">
                        <label>Количество бонусов за заказ</label>
                        <input type="number" class="form-control" name="AddBonuses" id="AddBonuses" value="0" min="0" max="999999" onchange="changeInputValue(this)" />

                        @Html.ValidationMessageFor(model => model.AddBonuses, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-10">
                        <label>Количество замков</label>
                        <input type="number" class="form-control" name="CountLock" id="CountLock" value="0" min="0" max="999999" onchange="calculatePrice()" />
                        @Html.ValidationMessageFor(model => model.CountLock, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        <label>Скидка, руб</label>
                        <input type="number" class="form-control" name="Discount" id="Discount" value="0" min="0" onchange="calculatePrice()" />
                        @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-10">

                    </div>
                    <div class="col-md-10">

                    </div>
                </div>
            </div>
            <br />
            <h4>Оплата </h4>
            <hr />
            <div class="form-group" id="totalDiv">
                <label>Итого к оплате: </label>
                <label id="totalSum">0</label>
                <label> руб</label>
            </div>
            <div class="moreInformationOrder">
                <div class="form-group">
                    <div class="col-md-10">
                        <label>Оплата наличными</label>
                        <input type="number" class="form-control" name="CashPayment" id="CashPayment" value="0" min="0" max="999999" onchange="calculateLeftToPay()" />
                    </div>
                    <div class="col-md-10">
                        <label>Оплата картой</label>
                        <input type="number" class="form-control" name="CardPayment" id="CardPayment" value="0" min="0" max="999999" onchange="calculateLeftToPay()" />
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-10">
                        <label>Залог наличными</label>
                        <input type="number" class="form-control" name="CashDeposit" id="CashDeposit" value="0" min="0" max="999999" onchange="calculateLeftToPay()" />
                    </div>
                    <div class="col-md-10">
                        <label>Залог картой</label>
                        <input type="number" class="form-control" name="CardDeposit" id="CardDeposit" value="0" min="0" max="999999" onchange="calculateLeftToPay()" />
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-10">
                        <label id="labelBonusPayment">Оплата бонусами </label>
                        <input type="number" class="form-control" name="bonusPayment" id="bonusPayment" value="0" min="0" max="0" onchange="calculateLeftToPay()" />
                    </div>
                    <div class="col-md-10">
                        <label>Документ</label>
                        @Html.DropDownList("TypeDocumentId", null, htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="form-group" id="totalDiv">
                <label>Осталось оплатить: </label>
                <label id="LeftToPay">0</label>
                <label> руб</label>
            </div>
            <br />
            <div class="form-group">
                <input type="button" value="Очистить" style="margin-right:1em" onclick="changeDate()" class="btn btn btn-dark float-md-left" />
                <input type="submit" value="Создать заказ" class="btn btn btn-danger float-md-left" />
            </div>
        }
    </div>
</div>

<script>
    var checkRateTransp = true;
    var checkRateAccessor = true;
    $(document).ready(function () {
        //Проверка наличия транспорта, аксессуаров и тарифов в указанное время
        checkRate();
        checkTransport();
        checkAccessories();
    });

    function checkRate() {
        //Проверка наличия тарифов в текущее время
        $.ajax({
            url: "/api/web/CheckRate",
            dataType: "json",
            data:
            {
                dateTime: document.getElementById("dateStart").value,
                isTransport: true
            },
            success: function (data) {
                if (data == false) {
                    checkRateTransp = false;
                    document.getElementById("addTransport").hidden = true;
                    document.getElementById("transport").innerHTML = '<p class="text - center">В указанное время отсутствуют доступные тарифы для транспорта</p>';
                }
                else {
                    checkRateTransp = true;
                    document.getElementById("addTransport").hidden = false;
                    document.getElementById("transport").innerHTML = '';
                }
            }
        });
        $.ajax({
            url: "/api/web/CheckRate",
            dataType: "json",
            data:
            {
                dateTime: document.getElementById("dateStart").value,
                isTransport: false
            },
            success: function (data) {
                if (data == false) {
                    checkRateAccessor = false;
                    document.getElementById("addAccessories").hidden = true;
                    document.getElementById("accessories").innerHTML = '<p class="text - center">В указанное время отсутствуют доступные тарифы для аксессуаров</p>';
                }
                else {
                    checkRateAccessor = true;
                    document.getElementById("addAccessories").hidden = false;
                    document.getElementById("accessories").innerHTML = '';

                }
            }
        });
    };
    function checkTransport() {
        $.ajax({
            url: "/api/web/CheckTransport",
            dataType: "json",
            data:
            {
                dateTime: document.getElementById("dateStart").value
            },
            success: function (data) {
                if (checkRateTransp == true) {
                    if (data == false) {
                        document.getElementById("addTransport").hidden = true;
                        document.getElementById("transport").innerHTML = '<p class="text - center">В указанное время отсутствуют доступные транспортные средства</p>';
                    }
                    else {
                        document.getElementById("addTransport").hidden = false;
                        document.getElementById("transport").innerHTML = '';
                    }
                }
            }
        });
    };
    function checkAccessories() {
        $.ajax({
            url: "/api/web/CheckAccessories",
            dataType: "json",
            data:
            {
                dateTime: document.getElementById("dateStart").value
            },
            success: function (data) {
                if (checkRateAccessor == true) {
                    if (data == false) {
                        document.getElementById("addAccessories").hidden = true;
                        document.getElementById("accessories").innerHTML = '<p class="text - center">В указанное время отсутствуют доступные аксессуары</p>';
                    }
                    else {
                        document.getElementById("addAccessories").hidden = false;
                        document.getElementById("accessories").innerHTML = '';
                    }
                }
            }
        });
    };

    //Добавление транспорта
    $("#addTransport").click(function () {
        $.ajax({
            url: 'AddDropListTransport',
            datatype: 'html',
            data: {
                dateTime: document.getElementById("dateStart").value
            },
            success: function (data) {
                $("#transport").append(data);
                var countTransport = document.getElementsByClassName("Transport");

                if (countTransport.length >= document.getElementById("Transport-0").length - 1) {
                    document.getElementById("addTransport").hidden = true;
                }
            }
        })
    });
    //Добавление аксессуара
    $("#addAccessories").click(function () {
        $.ajax({
            url: 'AddDropListAccessories',
            datatype: 'html',
            data: {
                dateTime: document.getElementById("dateStart").value
            },
            success: function (data) {
                $("#accessories").append(data);
                var countAccessories = document.getElementsByClassName("Accessories");

                if (countAccessories.length >= document.getElementById("Accessories-0").length - 1) {
                    document.getElementById("addAccessories").hidden = true;
                }
            }
        })
    });
    $("#bonusPayment").change(function () {
        let bonusValue = document.getElementById("bonusPayment").value;
        let bonusMax = document.getElementById("bonusPayment").max;
        if (bonusValue > bonusMax) {
            document.getElementById("bonusPayment").value = document.getElementById("bonusPayment").max;
        }
        if (bonusValue < 0) {
            document.getElementById("bonusPayment").value = 0;
        }
    });
    function deleteBlock(nameBlock) {
        document.getElementById(nameBlock).remove();
        calculatePrice();
    }
    function changeTransport(id) {
        document.getElementById("totalSum").innerHTML = Number(document.getElementById("totalSum").textContent) - Number(document.getElementById("Markup-" + (id.split("-"))[1]).value);
        document.getElementById("LeftToPay").innerHTML = Number(document.getElementById("LeftToPay").textContent) - Number(document.getElementById("Markup-" + (id.split("-"))[1]).value);
        $.ajax({
            type: "GET",
            dataType: "json",
            url: "/api/web/ValueMarkupTransport",
            data: "id=" + document.getElementById(id).value + "&dateStart=" + document.getElementById("dateStart").value,

            success: function (msg) {
                document.getElementById("Markup-" + (id.split("-"))[1]).value = msg;
                document.getElementById("totalSum").innerHTML = Number(document.getElementById("totalSum").textContent) + Number(msg);
                document.getElementById("LeftToPay").innerHTML = Number(document.getElementById("LeftToPay").textContent) + Number(msg);
            }
        });
    };
    function changeDate() {
        document.getElementById("transport").innerHTML = '';
        document.getElementById("accessories").innerHTML = '';
        document.getElementById("totalSum").innerHTML = "0";
        document.getElementById("LeftToPay").innerHTML = "0";
        document.getElementById("CountLock").value = 0;
        document.getElementById("duration").value = 0;
        document.getElementById("Discount").value = 0;

        document.getElementById("CashPayment").value = 0;
        document.getElementById("CardPayment").value = 0;
        document.getElementById("CashDeposit").value = 0;
        document.getElementById("CardDeposit").value = 0;
        document.getElementById("bonusPayment").value = 0;
        document.getElementById("AddBonuses").value = 0;

        checkRate();
        checkTransport();
        checkAccessories();
        calculatePrice();
    };
    function verifyChangeMarkup(id) {
        let markupValue = document.getElementById(id).value;
        let markupMax = document.getElementById(id).max;
        if (markupValue > markupMax) {
            document.getElementById(id).value = document.getElementById(id).max;
        }
        if (bonusValue < 0) {
            document.getElementById(id).value = 0;
        }
    };
    function calculatePrice() {
        var summ = document.getElementById("totalSum");
        var lpay = document.getElementById("LeftToPay");

        var arr = document.getElementsByClassName("Rate");
        var lock = document.getElementById("CountLock");

        var discount = document.getElementById("Discount");

        var arrMarkup = document.getElementsByClassName("Transport");

        if (lock.value == null || lock.value == "") {
            lock.value = 0;
        }
        if (discount.value == null || discount.value == "") {
            discount.value = 0;
        }


        let numberTransport = 0;
        let numberMarkup = 0;
        summ.innerHTML = "0";
        lpay.innerHTML = Number("0");

        while (numberTransport < arr.length) {
            $.ajax({
                type: "GET",
                dataType: "json",
                url: "/api/web/TarifPrice",
                data: "id=" + arr[numberTransport].value,
                success: function (msg) {
                    summ.innerHTML = Number(document.getElementById("totalSum").textContent) + Number(msg);
                    lpay.innerHTML = Number(document.getElementById("LeftToPay").textContent) + Number(msg);
                }
            });
            ++numberTransport;
        }

        while (numberMarkup < arrMarkup.length) {
            summ.innerHTML = Number(document.getElementById("totalSum").textContent) + Number(document.getElementById("Markup-" + numberMarkup).value);
            lpay.innerHTML = Number(document.getElementById("LeftToPay").textContent) + Number(document.getElementById("Markup-" + numberMarkup).value);
            ++numberMarkup;
        }

        lpay.innerHTML = Number(document.getElementById("LeftToPay").textContent) + Number(lock.value * 100);
        summ.innerHTML = Number(document.getElementById("totalSum").textContent) + Number(lock.value * 100);

        lpay.innerHTML = Number(document.getElementById("LeftToPay").textContent) - Number(discount.value);
        //summ.innerHTML = Number(document.getElementById("totalSum").textContent) - Number(discount.value);

        lpay.innerHTML = Number(document.getElementById("LeftToPay").textContent) -
            Number(document.getElementById("CashPayment").value) -
            Number(document.getElementById("CardPayment").value) -
            Number(document.getElementById("CashDeposit").value) -
            Number(document.getElementById("CardDeposit").value) -
            Number(document.getElementById("bonusPayment").value);
    }
    function calculateLeftToPay() {
        var lpay = document.getElementById("LeftToPay");
        lpay.innerHTML = document.getElementById("totalSum").textContent;
        var bonusPayment = 0;
        if (document.getElementById("bonusPayment").value <= document.getElementById("bonusPayment").max) {
            bonusPayment = document.getElementById("bonusPayment").value;
        }
        else {
            bonusPayment = document.getElementById("bonusPayment").max
        }
        lpay.innerHTML = Number(document.getElementById("LeftToPay").textContent) -
            Number(document.getElementById("CashPayment").value) -
            Number(document.getElementById("CardPayment").value) -
            Number(document.getElementById("CashDeposit").value) -
            Number(document.getElementById("CardDeposit").value) -
            Number(document.getElementById("Discount").value) -
            Number(bonusPayment);
    };
</script>
@Scripts.Render("~/bundles/jqueryval")

<script src="~/Scripts/select2/i18n/ru.js"></script>
<script src="~/Scripts/select2/select2.full.min.js"></script>
<script src="~/Scripts/select2/select2.js"></script>

}
