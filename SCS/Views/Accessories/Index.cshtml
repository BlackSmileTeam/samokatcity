@model IEnumerable<SCS.Models.Accessories>
@using SCS.Models;

@{
    ViewBag.Title = "Аксессуары";
}

<div class="container">
    <div class="divTable">
        <h4><b>Аксессуары</b></h4>
        <hr />
        @using (Ajax.BeginForm("Filter", new AjaxOptions { UpdateTargetId = "result" }))
        {
            @Html.AntiForgeryToken()
            <div class="moreInformationOrder filterPanel">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="orderTableMore">
                    @Html.Label("Статус:")
                    @Html.DropDownList("StatusAccessories", null, htmlAttributes: new { @class = "form-control" })
                </div>

                <div class="orderTableMore">
                    <div class="filterPanel"></div>
                    <input type="submit" value="Поиск" id="search" class="btn btn-outline-dark" />
                </div>
            </div>
        }

        <table class="table" id="result">
            <tr style="background-color: #F5F5F5">
                <th>
                    @Html.Label("Номер аксессуара")
                </th>
                <th>
                    @Html.Label("Наименование аксессуара")
                </th>
                <th>
                    @Html.Label("Статус наличия")
                </th>
                <th />
                @Html.Label("Цена")
                <th />
            </tr>
            @if (Model.Count() > 0)
            {
                foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Id)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @foreach (var status in ViewData["status"] as List<Helpers>)
                            {
                                if (status.Value == item.Status)
                                {
                                    @Html.Label(status.Text)
                                    break;
                                }
                            }

                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Price)
                        </td>
                        <td>
                            <a href="@Url.Action("Edit", "Accessories", new { id = item.Id })" class="text-decoration-none">
                                <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-pencil text-dark text-decoration-none" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                    <path fill-rule="evenodd" d="M11.293 1.293a1 1 0 0 1 1.414 0l2 2a1 1 0 0 1 0 1.414l-9 9a1 1 0 0 1-.39.242l-3 1a1 1 0 0 1-1.266-1.265l1-3a1 1 0 0 1 .242-.391l9-9zM12 2l2 2-9 9-3 1 1-3 9-9z" />
                                    <path fill-rule="evenodd" d="M12.146 6.354l-2.5-2.5.708-.708 2.5 2.5-.707.708zM3 10v.5a.5.5 0 0 0 .5.5H4v.5a.5.5 0 0 0 .5.5H5v.5a.5.5 0 0 0 .5.5H6v-1.5a.5.5 0 0 0-.5-.5H5v-.5a.5.5 0 0 0-.5-.5H3z" />
                                </svg>
                            </a>
                            <a href="@Url.Action("Delete", "Accessories", new { id = item.Id })" class="close text-dark text-decoration-none" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </a>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="6">
                        <center> Данные отсутствуют </center>
                    </td>
                </tr>
            }
        </table>


        <a href="@Url.Action("Create","Accessories")" class="btn btn-default btn-circle">
            +
        </a>
    </div>
</div>
