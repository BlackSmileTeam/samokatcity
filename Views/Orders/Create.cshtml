
@model SCS.Models.Order

@{
    ViewBag.Title = "Create";
}



<div class="orderTable">

    <h2>Создание заказа</h2>
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="orderTable">
        <hr />
        <div class="moreInformationOrder">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                <div class="col-md-10">
                    <label>ФИО клиента</label>
                    <select name="UserId" class="form-control" id="UserId" lang="ru" required="true">
                        @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                    </select>
                </div>

                <div class="col-md-10">
                    @Html.LabelFor(model => model.DateStart)

                    <input type="datetime-local" id="dateStart" name="dateStart" value="@String.Format("{0:dd.MM.yyyy HH:mm}", DateTime.Now.ToLocalTime())" date-format="m/d/yyyy hh:mm" class="form-control" title="Дата начала действия заказа" required="true" onchange="changeDate()">
                    @Html.ValidationMessageFor(model => model.DateStart, "", new { @class = "text-danger" })
                </div>

            </div>

            <div class="form-group">
                <div class="col-md-10">
                    <label>Статус заказа</label>
                    <div class="checkbox">
                        @Html.DropDownList("StatusOrder", null, htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-md-10">

                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">

                </div>
            </div>
        </div>


        <h4>Транспорт</h4>
        <hr />
        <div id="transport">
        </div>
        <div class="col-md-offset-2 col-md-10">
            <input type="button" value="+" id="addTransport" class="btn btn-outline-dark" />
        </div>
        <br />

        <h4>Аксессуары</h4>
        <hr />
        <div id="accessories">

        </div>


        <div class="col-md-offset-2 col-md-10">
            <input type="button" value="+" id="addAccessories" class="btn btn-outline-dark" />
        </div>
        <br />

        <h4>Оплата</h4>
        <hr />
        <div class="moreInformationOrder">
            <div class="form-group">
                <div class="col-md-10">
                    <label>Оплата наличными</label>
                    <input type="number" class="form-control" name="CashPayment" id="CashPayment" value="0" min="0" max="999999" onchange="changeInputValue(this)" />
                </div>
                <div class="col-md-10">
                    <label>Оплата картой</label>
                    <input type="number" class="form-control" name="CardPayment" id="CardPayment" value="0" min="0" max="999999" onchange="changeInputValue(this)" />
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    <label>Залог наличными</label>
                    <input type="number" class="form-control" name="CashDeposit" id="CashDeposit" value="0" min="0" max="999999" onchange="changeInputValue(this)" />
                </div>
                <div class="col-md-10">
                    <label>Залог картой</label>
                    <input type="number" class="form-control" name="CardDeposit" id="CardDeposit" value="0" min="0" max="999999" onchange="changeInputValue(this)" />
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    <label id="labelBonusPayment">Оплата бонусами  </label>
                    <input type="number" class="form-control" name="bonusPayment" id="bonusPayment" value="0" min="0" max="0" onchange="changeInputValue(this)" />
                </div>
                <div class="col-md-10">
                    <label>Документ</label>
                    @Html.DropDownList("TypeDocumentId", null, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>
        </div>
        <br />


        <h4>Дополнительные параметры</h4>
        <hr />
        <div class="moreInformationOrder">
            <div class="form-group">
                <div class="col-md-10">
                    <label>Количество бонусов за заказ</label>
                    <input type="number" class="form-control" name="AddBonuses" id="AddBonuses" value="0" min="0" max="999999" onchange="changeInputValue(this)" />

                    @Html.ValidationMessageFor(model => model.AddBonuses, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-10">
                    <label>Количество замков</label>
                    <input type="number" class="form-control" name="CountLock" id="AddBonuses" value="0" min="0" max="999999" onchange="changeInputValue(this)" />
                    @Html.ValidationMessageFor(model => model.CountLock, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    <label>Скидка, руб</label>
                    <input type="number" class="form-control" name="Discount" id="Discount" value="0" min="0" onchange="changeInputValue(this)" />
                    @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-10">
                    <label>Наценка, руб</label>
                    <input type="number" class="form-control" name="duration" id="duration" value="0" min="0" onchange="changeInputValue(this)" />
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">

                </div>
                <div class="col-md-10">


                </div>
            </div>
        </div>
        <br />

    </div>
    <div class="col-md-offset-2 col-md-10 ml-5">
        <input type="submit" value="Создать заказ" class="btn btn btn-danger float-md-left" />
    </div>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            $("#addTransport").click(function () {
                $.ajax({
                    url: 'AddDropListTransport',
                    datatype: 'html',
                    success: function (data) {
                        $("#transport").append(data);
                    }
                })
            });
            $("#addAccessories").click(function () {
                $.ajax({
                    url: 'AddDropListAccessories',
                    datatype: 'html',
                    success: function (data) {
                        $("#accessories").append(data);
                    }
                })
            });

            $("#bonusPayment").change(function () {
                let bonusValue = document.getElementById("bonusPayment").value;
                let bonusMax = document.getElementById("bonusPayment").max;
                if (bonusValue > bonusMax) {
                    document.getElementById("bonusPayment").value = document.getElementById("bonusPayment").max;
                }
                if (bonusValue < 0) {
                    document.getElementById("bonusPayment").value = 0;
                }
            });
        });

        function changeDate() {
            document.getElementById("transport").innerHTML = '';
            document.getElementById("accessories").innerHTML = '';
        }
        function changeOrderPrice() {

            for(var transport in transports)
            {
                $.ajax({
                    url: "/api/web/changeOrderPriceTransport",
                    dataType: "json",
                    type: "POST",
                    data:
                    {
                        "transportId": transport,
                        "nameRates": rates

                    },
                    success: function (price) {
                        sum += price;
                    }
                });
            }
        }

        function countMarkup(val, id) {
            $.ajax({
                type: "GET",
                dataType: "json",
                url: "/api/web/ValueMarkupTransport",
                data: "id=" + val,
                success: function (msg) {
                    $.ajax({
                        type: "GET",
                        dataType: "json",
                        url: "/api/web/ValueCountTransport",
                        data: "id=" + val,
                        success: function (msgCount) {
                            document.getElementById("countTransport-" + id.split("-")[1]).max = msgCount;
                        }
                    });
                    document.getElementById("Markup-" + id.split("-")[1]).max = msg;
                }
            });
        }

        function verifyChangeMarkup(id) {

            let markupValue = document.getElementById(id).value;
            let markupMax = document.getElementById(id).max;
            if (markupValue > markupMax) {
                document.getElementById(id).value = document.getElementById(id).max;
            }
            if (bonusValue < 0) {
                document.getElementById(id).value = 0;
            }
        };

    </script>
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/select2/i18n/ru.js"></script>
    <script src="~/Scripts/select2/select2.full.min.js"></script>
    <script src="~/Scripts/select2/select2.js"></script>

}
